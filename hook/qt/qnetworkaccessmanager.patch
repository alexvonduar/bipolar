--- qt-everywhere-opensource-src-5.1.1\qtbase\src\network\access\qnetworkaccessmanager.cpp	Mon Aug 26 04:03:34 2013
+++ qt-everywhere-opensource-src-5.1.1\qtbase\src\network\access\qnetworkaccessmanager.new	Fri Jun 27 20:32:42 2014
@@ -71,6 +71,8 @@
 
 #include "qthread.h"
 
+#include "QtCore/qstandardpaths.h"
+
 QT_BEGIN_NAMESPACE
 
 Q_GLOBAL_STATIC(QNetworkAccessFileBackendFactory, fileBackend)
@@ -701,6 +703,30 @@
 */
 QNetworkReply *QNetworkAccessManager::post(const QNetworkRequest &request, QIODevice *data)
 {
+    // Example: /v2/users/1234567/training-sessions/23456789/exercises/34567890/autolaps
+    if ((data != NULL) && (!data->isSequential())) {
+        const QString &urlPath = request.url().path();
+        if (urlPath.contains(QLatin1String("training-sessions"))) {
+            QString dataPath = QStandardPaths::writableLocation(QStandardPaths::DataLocation);
+            if (dataPath.isEmpty()) {
+                dataPath = QDir::currentPath();
+            } else {
+                QDir dir;
+                dir.mkpath(dataPath);
+            }
+            QString fileName;
+            foreach (const QChar &c, urlPath) {
+                fileName += (c.isLetterOrNumber()) ? c : QChar::fromLatin1('-');
+            }
+            while (fileName.startsWith(QLatin1Char('-'))) {
+                fileName.remove(0,1);
+            }
+            QFile file(dataPath + QDir::separator() + fileName);
+            if (file.open(QIODevice::WriteOnly)) {
+                file.write(data->readAll());
+            }
+        }
+    }
     return d_func()->postProcess(createRequest(QNetworkAccessManager::PostOperation, request, data));
 }
 
